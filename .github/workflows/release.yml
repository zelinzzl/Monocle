# name: Release

# on:
#   push:
#     branches: ["main", "development"]
#   pull_request:
#     branches: ["main", "development"]

# jobs:
#   test:
#     name: Test and lint
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2
#     - name: Set up Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: 22.x
#     - name: Install dependencies
#       run: npm install
#     - name: Run tests
#       run: npm run test

#   build:
#     name: Build application
#     runs-on: ubuntu-latest
#     steps:
#       - name: "checkout repository"
#         uses: actions/checkout@v2

#       - name: "setup node"
#         uses: actions/setup-node@v2.1.5
#         with:
#           node-version: 22.x

#       - name: "🔧 install npm@latest"
#         run: npm i -g npm@latest

#       - name: "📦 install dependencies"
#         uses: bahmutov/npm-install@v1

#       - name: "📊 repository visualizer"
#         id: diagram
#         uses: githubocto/repo-visualizer@0.7.1
#         with:
#           excluded_paths: "node_modules,build,.storybook,.netlify,.github,npm-shrinkwrap.json"
#           output_file: "public/diagram.svg"
#           should_push: false
#           root_path: "src/"
#           artifact_name: "diagram"

#       - name: "🚀 static app"
#         run: npm run build

#       - name: "📂 production artifacts"
#         uses: actions/upload-artifact@v2
#         with:
#           name: build
#           path: build

#   release:
#     environment:
#       name: production
#       url: https://github.com/${{ github.repository }}/releases/tag/${{ steps.semantic-release.outputs.release-tag }}
#     name: Semantic release
#     needs:
#       - test
#       - build
#     runs-on: ubuntu-latest
#     steps:
#       - name: "☁️ checkout repository"
#         uses: actions/checkout@v2
#         with:
#           fetch-depth: 0

#       - name: "📂 download build artifacts"
#         uses: actions/download-artifact@v2
#         with:
#           name: build
#           path: build

#       - name: "📂 download diagram artifacts"
#         uses: actions/download-artifact@v2
#         with:
#           name: diagram
#           path: .

#       - name: "🚀 release"
#         id: semantic-release
#         uses: open-sauced/semantic-release-conventional-config@v3
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   cleanup:
#     name: Cleanup actions
#     needs:
#       - release
#     runs-on: ubuntu-latest
#     steps:
#       - name: "♻️ remove build artifacts"
#         uses: geekyeggo/delete-artifact@v1
#         with:
#           name: |
#             build
#             diagram
